@startuml
' analysis_rule_engine.puml - 规则引擎分析器
package "分析处理层 (analysis)" {
    package "规则引擎 (rule_engine)" {
        class RuleEvaluator {
            +rules_index: Dict[str, Dict[str, Any]]
            +rule_id: str
            +params: Dict[str, Any]
            +_evaluate_single_rule(rule_id: str, data: Dict[str, Any], params: Dict[str, Any]): Dict[str, Any]
            +_extract_stage_data(staged_data: Dict[str, Any], stage_id: str): Dict[str, Any]
            +analyze(data: Dict[str, Any], **kwargs: Any): Dict[str, Any]
            +run(**kwargs: Any): Any
        }
        class RuleEngineFactory {
            +_analyzers: Dict[str, Type[BaseAnalyzer]]
            +{static} create_analyzer(analyzer_type: str, **kwargs: Any): BaseAnalyzer
            +{static} register_analyzer(analyzer_type: str, analyzer_class: Type[BaseAnalyzer]): void
            +{static} get_supported_types(): list
        }
    }
}

' 继承
RuleEvaluator --|> BaseAnalyzer

' 接口实现
RuleEvaluator ..|> IAnalyzer

' 工厂
RuleEngineFactory ..> RuleEvaluator : creates

' 异常
RuleEvaluator ..> AnalysisError : throws

' 依赖
RuleEvaluator --> RuleEngineAdapter

@enduml