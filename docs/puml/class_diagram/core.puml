@startuml
' core.puml - 核心抽象层
package "核心抽象层 (core)" {
    abstract class BaseOperator {
        +config: Dict[str, Any]
        +_configured: bool
        +configure(config: Dict[str, Any]): void
        +validate(data: Any): bool
        +{abstract} run(**kwargs: Any): Any
    }
    abstract class BaseReader {
        +{abstract} read(source: str, **kwargs: Any): Dict[str, Any]
    }
    abstract class BaseProcessor {
        +{abstract} process(data: Dict[str, Any], **kwargs: Any): Dict[str, Any]
    }
    abstract class BaseAnalyzer {
        +{abstract} analyze(data: Dict[str, Any], **kwargs: Any): Dict[str, Any]
    }
    abstract class BaseWorkflowComponent {
        +inputs: Dict[str, Any]
        +outputs: Dict[str, Any]
        +set_input(name: str, value: Any): void
        +get_output(name: str): Any
        +clear_outputs(): void
    }

    class OPLibError {
        <<Exception>>
    }
    class ConfigurationError {
        <<Exception>>
    }
    class DataProcessingError {
        <<Exception>>
    }
    class AnalysisError {
        <<Exception>>
    }
    class WorkflowError {
        <<Exception>>
    }
    class ValidationError {
        <<Exception>>
    }

    interface IDataReader {
        +{abstract} read(source: str, **kwargs: Any): Dict[str, Any]
    }
    interface IDataProcessor {
        +{abstract} process(data: Dict[str, Any], **kwargs: Any): Dict[str, Any]
    }
    interface IAnalyzer {
        +{abstract} analyze(data: Dict[str, Any], **kwargs: Any): Dict[str, Any]
    }
    interface IWorkflowBuilder {
        +{abstract} build(config: Dict[str, Any]): Any
    }
    interface IConfigurable {
        +{abstract} configure(config: Dict[str, Any]): void
    }
    interface IValidatable {
        +{abstract} validate(data: Any): bool
    }
}

' 继承关系
BaseReader --|> BaseOperator
BaseProcessor --|> BaseOperator
BaseAnalyzer --|> BaseOperator
BaseWorkflowComponent --|> BaseOperator
ConfigurationError --|> OPLibError
DataProcessingError --|> OPLibError
AnalysisError --|> OPLibError
WorkflowError --|> OPLibError
ValidationError --|> OPLibError

' 接口实现
BaseReader ..|> IDataReader
BaseProcessor ..|> IDataProcessor
BaseAnalyzer ..|> IAnalyzer

@enduml