@startuml 系统序列流程图
!theme plain
skinparam sequence {
    BackgroundColor #E3F2FD
    LifeLineBackgroundColor #FFFFFF
    LifeLineBorderColor #1976D2
    ActorBackgroundColor #E8F5E8
    ActorBorderColor #388E3C
    ParticipantBackgroundColor #FFF3E0
    ParticipantBorderColor #F57C00
}

title OPLib 系统序列流程图

actor "用户" as User
participant "WebAPI" as API
participant "WorkflowExecutor" as Executor
participant "WorkflowBuilder" as Builder
participant "ConfigLoader" as Config
participant "DataReader" as Reader
participant "DataProcessor" as Processor
participant "StageDetector" as Detector
participant "RuleEvaluator" as RuleEngine
participant "SPCAnalyzer" as SPC
participant "ReportGenerator" as Reporter
participant "FileWriter" as Writer

== 系统初始化阶段 ==

User -> API: POST /run
activate API

API -> Executor: 创建工作流执行器
activate Executor

Executor -> Builder: 创建工作流构建器
activate Builder

Builder -> Config: 加载配置文件
activate Config
Config -> Config: load_workflow_config()
Config -> Config: load_operators_config()
Config -> Config: load_rules_config()
Config -> Config: load_process_stages_config()
Config --> Builder: 返回配置数据
deactivate Config

Builder -> Builder: 构建DAG图
note right: 解析工作流配置\n- 收集节点\n- 构建依赖图\n- 拓扑排序

Builder --> Executor: 返回工作流函数
deactivate Builder

== 数据输入阶段 ==

Executor -> Reader: 执行数据读取任务
activate Reader
Reader -> Reader: 读取CSV/JSON文件
note right: CSVReader/JSONReader\n- 数据清洗\n- 类型转换\n- 跳过非数值列
Reader --> Executor: 返回原始传感器数据
deactivate Reader

== 数据处理阶段 ==

Executor -> Processor: 执行数据聚合任务
activate Processor
Processor -> Processor: 传感器组聚合
note right: SensorGroupAggregator\n- 自动识别PTC*列\n- 按组聚合数据\n- 生成temperature_group
Processor --> Executor: 返回聚合后数据
deactivate Processor

== 分析处理阶段 ==

par 并行执行阶段检测和SPC分析
    Executor -> Detector: 执行阶段检测任务
    activate Detector
    Detector -> Detector: 基于规则检测工艺阶段
    note right: StageDetector\n- 支持heating/soaking/cooling\n- 传感器级别分析\n- 规则引擎评估
    Detector --> Executor: 返回阶段化数据
    deactivate Detector
    
    Executor -> SPC: 执行SPC分析任务
    activate SPC
    SPC -> SPC: 统计过程控制分析
    note right: SPCControlChart\n- 3-sigma控制限\n- 异常检测\n- 统计量计算
    SPC --> Executor: 返回SPC分析结果
    deactivate SPC
end

Executor -> RuleEngine: 执行规则评估任务
activate RuleEngine
RuleEngine -> RuleEngine: 执行业务规则
note right: RuleEvaluator\n- 支持分阶段规则\n- 规则引擎评估\n- 结果汇总
RuleEngine --> Executor: 返回规则评估结果
deactivate RuleEngine

== 报告生成阶段 ==

Executor -> Reporter: 执行报告生成任务
activate Reporter
Reporter -> Reporter: 整合分析结果
note right: ReportGenerator\n- 整合所有分析结果\n- 生成结构化报告\n- 支持多种格式
Reporter --> Executor: 返回分析报告
deactivate Reporter

Executor -> Writer: 执行文件写入任务
activate Writer
Writer -> Writer: 写入报告文件
note right: FileWriter\n- 支持JSON格式\n- 自动创建目录\n- 时间戳标识
Writer --> Executor: 返回文件路径
deactivate Writer

== 结果返回阶段 ==

Executor --> API: 返回执行结果
note right: 包含:\n- 成功/失败状态\n- 执行时间\n- 结果文件路径\n- 错误信息
deactivate Executor

API --> User: 返回响应
note right: {\n  "status": "success",\n  "execution_time": 2.5,\n  "result_path": "quality-reports-20231201T143022Z.json"\n}
deactivate API

== 错误处理 ==

note over User, Writer
**错误处理机制:**
- 每个阶段都有异常捕获
- 详细的错误信息记录
- 优雅的错误恢复
- 执行状态监控
end note

== 监控和日志 ==

note over Executor
**监控能力:**
- 执行时间统计
- 任务状态跟踪
- 性能指标收集
- 详细日志记录
end note

@enduml
